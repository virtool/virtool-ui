const crypto = require("crypto");

const URLFontAwesome = "https://use.fontawesome.com";
const CSPDefaultSRC = "default-src 'self'";
const CSPImgSRC = "img-src 'self' data:";
const CSPFontSrc = `font-src 'self' https://fonts.gstatic.com ${URLFontAwesome}`;

/**
 * Applies CSP header to res object
 *
 * @func
 * @param req {object} the request object generated by express
 * @param res {object} the response object generated by express
 * @param next {function} passes control to next middleware
 * @returns {N/A}
 */
exports.applyCSPHeader = (backendURL) => (req, res, next) => {
  const nonce = crypto.randomBytes(32).toString("base64");
  res.locals.nonce = nonce;

  const websocketURL = `ws://${new URL(backendURL).host}`;
  const CSPConnectSRC = `connect-src 'self' sentry.io ${websocketURL} ${backendURL}`;

  const csp = [
    CSPConnectSRC,
    CSPDefaultSRC,
    CSPFontSrc,
    CSPImgSRC,
    generateCSPScriptSRC(nonce),
    generateCSPStyleSRC(nonce),
  ];

  res.append("Content-Security-Policy", csp.join("; "));
  next();
};

const generateCSPScriptSRC = (nonce) => {
  return `script-src 'self' 'nonce-${nonce}' ${URLFontAwesome}`;
};

const generateCSPStyleSRC = (nonce) => {
  return `style-src 'self' 'nonce-${nonce}' https://fonts.googleapis.com ${URLFontAwesome}`;
};
