const crypto = require("crypto");

const fontAwesomeURL = "https://use.fontawesome.com";
const defaultSrc = "default-src 'self'";
const imgSrc = "img-src 'self' data:";
const fontSrc = `font-src 'self' ${fontAwesomeURL}`;

const generateCSPScriptSrc = (nonce) => {
  return `script-src 'self' 'nonce-${nonce}' ${fontAwesomeURL}`;
};

const generateCSPStyleSrc = (nonce) => {
  return `style-src 'self' 'nonce-${nonce}' https://fonts.googleapis.com ${fontAwesomeURL}`;
};

const generateCSPConnectSrc = (tenant) => {
  return `connect-src 'self' *.sentry.io ${
    tenant ? `https://${tenant}.b2clogin.com` : ""
  } `;
};

/**
 * Applies CSP header to response object
 *
 * @func
 * @param req {object} the request object generated by express
 * @param res {object} the response object generated by express
 * @param next {function} passes control to next middleware
 * @returns {N/A}
 */
exports.applyCSPHeader = (tenant) => (req, res, next) => {
  const nonce = crypto.randomBytes(32).toString("base64");
  res.locals.nonce = nonce;

  const csp = [
    defaultSrc,
    fontSrc,
    imgSrc,
    generateCSPConnectSrc(tenant),
    generateCSPScriptSrc(nonce),
    generateCSPStyleSrc(nonce),
  ];

  res.append("Content-Security-Policy", csp.join("; "));

  next();
};
