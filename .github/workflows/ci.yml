name: ci

on:
    push:
        branches:
            - "main"
    pull_request:
        branches:
            - "main"

jobs:
  commitlint:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Lint
        uses: wagoid/commitlint-github-action@v6
  tsc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm i
      - name: tsc
        run: npx tsc --noEmit
  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm i
      - name: Run ESLint
        run: npx eslint --quiet src/js
  prettier:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm i
      - name: Run Prettier
        run: npx prettier -l src/js
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Test
        run: |
          npm i
          npm run test
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          target: dist
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  release:
    runs-on: ubuntu-22.04
    needs: [test]
    if: github.event_name == 'push'
    steps:
      - name: Generate GitHub App Token
        id: generate-token
        run: |
          app_id="${{ secrets.APP_ID }}"
          private_key="${{ secrets.PRIVATE_KEY }}"
              
          # Generate a JWT token
          header=$(echo -n '{"alg":"RS256","typ":"JWT"}' | openssl base64 -e -A | tr '+/' '-_' | tr -d '=')
          now=$(date +%s)
          iat=$now
          exp=$((now + 600))  # Token expires in 10 minutes
          payload=$(echo -n "{\"iat\":$iat,\"exp\":$exp,\"iss\":$app_id}" | openssl base64 -e -A | tr '+/' '-_' | tr -d '=')
          signature=$(echo -n "$header.$payload" | openssl dgst -sha256 -sign <(echo "$private_key") -binary | openssl base64 -e -A | tr '+/' '-_' | tr -d '=')
          jwt="$header.$payload.$signature"
              
          # Exchange JWT for an installation access token
          token=$(curl -s -X POST \
          -H "Authorization: Bearer $jwt" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/app/installations/${{ secrets.INSTALLATION_ID }}/access_tokens \
          | jq -r .token)
              
          echo "::add-mask::$token"
          echo "token=$token" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install semantic-release
        run: npm i semantic-release@v23.0.7 conventional-changelog-conventionalcommits@7.0.2
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: npx semantic-release
