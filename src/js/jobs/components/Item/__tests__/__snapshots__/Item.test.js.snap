// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<JobItem /> should render when [canCancel=false] and [canArchive=false] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={false}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={false}
      canCancel={false}
      onArchive={[Function]}
      onCancel={[Function]}
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [canCancel=false] and [canArchive=true] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={false}
      onArchive={[Function]}
      onCancel={[Function]}
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [canCancel=true] and [canArchive=false] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={false}
      canCancel={true}
      onArchive={[Function]}
      onCancel={[Function]}
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [canCancel=true] and [canArchive=true] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={true}
      onArchive={[Function]}
      onCancel={[Function]}
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="cancelled"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="red"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="cancelled"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={true}
      key="cancelled"
      onArchive={[Function]}
      onCancel={[Function]}
      state="cancelled"
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="complete"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="complete"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={true}
      key="complete"
      onArchive={[Function]}
      onCancel={[Function]}
      state="complete"
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="error"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="red"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="error"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={true}
      key="error"
      onArchive={[Function]}
      onCancel={[Function]}
      state="error"
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="running"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="blue"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="running"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={true}
      key="running"
      onArchive={[Function]}
      onCancel={[Function]}
      state="running"
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="waiting"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="waiting"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <Item__JobActionOverlay>
    <JobAction
      canArchive={true}
      canCancel={true}
      key="waiting"
      onArchive={[Function]}
      onCancel={[Function]}
      state="waiting"
    />
  </Item__JobActionOverlay>
</Item__JobItemContainer>
`;
