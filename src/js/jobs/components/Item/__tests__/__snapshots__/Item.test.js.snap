// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<JobItem /> should render when [canCancel=false] and [canRemove=false] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={false}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={false}
    canRemove={false}
    onCancel={[Function]}
    onRemove={[Function]}
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [canCancel=false] and [canRemove=true] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={false}
    canRemove={true}
    onCancel={[Function]}
    onRemove={[Function]}
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [canCancel=true] and [canRemove=false] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={false}
    onCancel={[Function]}
    onRemove={[Function]}
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [canCancel=true] and [canRemove=true] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={true}
    onCancel={[Function]}
    onRemove={[Function]}
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="cancelled"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="red"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="cancelled"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={true}
    key="cancelled"
    onCancel={[Function]}
    onRemove={[Function]}
    state="cancelled"
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="complete"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="complete"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={true}
    key="complete"
    onCancel={[Function]}
    onRemove={[Function]}
    state="complete"
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="error"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="red"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="error"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={true}
    key="error"
    onCancel={[Function]}
    onRemove={[Function]}
    state="error"
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="running"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="blue"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="running"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={true}
    key="running"
    onCancel={[Function]}
    onRemove={[Function]}
    state="running"
  />
</Item__JobItemContainer>
`;

exports[`<JobItem /> should render when [state="waiting"] 1`] = `
<Item__JobItemContainer>
  <Item__JobItemLinkBox
    to="/jobs/foo"
  >
    <ProgressBar__AffixedProgressBar
      color="green"
      now={100}
    />
    <Item__JobItemBody>
      <Item__JobItemHeader>
        <span>
          Build Index
        </span>
        <JobStatus
          pad={true}
          state="waiting"
        />
      </Item__JobItemHeader>
      <Attribution
        time="Foo"
        user="bob"
      />
    </Item__JobItemBody>
  </Item__JobItemLinkBox>
  <JobAction
    canCancel={true}
    canRemove={true}
    key="waiting"
    onCancel={[Function]}
    onRemove={[Function]}
    state="waiting"
  />
</Item__JobItemContainer>
`;
